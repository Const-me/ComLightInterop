<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
	<metadata minClientVersion="3.4.4">
		<id>ComLightInterop</id>
		<version>1.3.5</version>
		<authors>const.me</authors>
		<owners>const.me</owners>
		<summary>Lightweight cross-platform COM interop library for Windows and Linux. Allows to expose C++ objects to .NET, and .NET objects to C++.</summary>
		<description>The library only supports IUnknown-based interfaces, it doesn’t handle IDispatch.
You can only use simple types in your interfaces: primitives, structures, strings, pointers, function pointers, but not VARIANT or SAFEARRAY.
This package targets 3 platforms, .NET framework 4.7.2, .NET Core 2.2, and VC++.
Unfortunately, VC++ is Windows only.
To build Linux shared libraries implementing or consuming COM objects, please add "build/native" directory from this package to C++ include paths.
For cmake see include_directories command, or use some other method, depending on your C++ build system, and compiler.
Keep in mind .NET assemblies are often “AnyCPU”, C++ libraries are not, please make sure you’re building your native code for the correct architecture.</description>
		<copyright>Copyright © const.me, 2019-2020</copyright>
		<title>Lightweight cross-platform COM interop</title>
		<releaseNotes>The library now supports properties in COM interfaces.

Getters/setters are required to be present in the interfaces as well, as normal COM methods.
This is to make easier to correlate what happens on the 2 sides of the interop, also to apply custom marshalling attributes to individual getter/setter methods and their parameters.

The feature is not exposed to C++, properties stay on the C# side of the interop.

Use `[Property]` custom attribute if you want to specify how exactly property is mapped to methods.
Without that custom attribute, `int prop{ get; set }` will use `getprop` and `setprop` methods. The mapping is case agnostic, `GetProp` and `SetProp` will work, too.
		</releaseNotes>
		<projectUrl>https://github.com/Const-me/ComLightInterop</projectUrl>
		<repository type="git" url="https://github.com/Const-me/ComLightInterop.git" />
		<license type="expression">MIT</license>
		<requireLicenseAcceptance>false</requireLicenseAcceptance>
		<dependencies>
			<group targetFramework=".NETCoreApp2.1" />
			<group targetFramework="net472">
				<dependency id="System.Buffers" version="4.5.0" />
				<dependency id="System.Memory" version="4.5.3" />
			</group>
			<group targetFramework="native" />
		</dependencies>
		<references>
			<reference file="ComLight.dll" />
		</references>
		<tags>native, ComLightInterop, COM</tags>
	</metadata>
	<files>
		<!-- .NET Core -->
		<file src="bin\Release\netcoreapp2.1\ComLight.dll" target="lib\netcoreapp2.1" />
		<file src="bin\Release\netcoreapp2.1\ComLight.pdb" target="lib\netcoreapp2.1" />
		<file src="bin\Release\netcoreapp2.1\ComLight.xml" target="lib\netcoreapp2.1" />

		<!-- .NET Framework -->
		<file src="..\ComLightDesktop\bin\Release\ComLight.dll" target="lib\net472" />
		<file src="..\ComLightDesktop\bin\Release\ComLight.pdb" target="lib\net472" />
		<file src="..\ComLightDesktop\bin\Release\ComLight.xml" target="lib\net472" />
		
		<!-- Native code -->
		<file src="..\ComLightLib\**.h" target="build\native" />
		<file src="..\ComLightLib\**.hpp" target="build\native" />
		<file src="..\ComLightLib\**.cpp" target="build\native" />
		<file src="ComLightInterop.targets" target="build" />
	</files>
</package>